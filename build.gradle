plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.2.0"
	id "com.github.breadmoirai.github-release" version "2.3.7"
	id "com.modrinth.minotaur" version "2.+"
}

// Define missing property to fix error
ext.minecraft_mappings = 'your_mappings_version_here'

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"killer" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
        // Fabric
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
		minecraft "net.minecraft:${project.minecraft_version}:${project.minecraft_mappings}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Mods
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//        modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
        modImplementation "me.lucko:fabric-permissions-api:${project.permissions_api_version}"

        include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.5")))

        // Code Quality
        compileOnly "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_jupiter_version}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit_jupiter_version}"

        // JIJ Dependencies
        modApi  "me.lucko:fabric-permissions-api:${project.permissions_api_version}"
        include "me.lucko:fabric-permissions-api:${project.permissions_api_version}"
        modApi  "eu.pb4:placeholder-api:${project.placeholder_api_version}"
        include "eu.pb4:placeholder-api:${project.placeholder_api_version}"
        modImplementation 'org.yaml:snakeyaml:2.0'
        include 'org.yaml:snakeyaml:2.0'
        modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
        include "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

        // mod compatibility
        modCompileOnly  "maven.modrinth:vanish:${project.vanish_version}"

        // Subprojects
        subprojects.each {
            implementation project(path: ":${it.name}", configuration: "namedElements")
            include project("${it.name}:") // nest within distribution
        }
    }


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}